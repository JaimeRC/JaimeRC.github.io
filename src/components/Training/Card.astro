---
import { Icon } from "astro-icon/components";
import { Image } from 'astro:assets';
import type { Company } from "../../types";
import  IMAGES  from '../../data/images.json'

interface Props {
    company: Company;
    index: number
}

const { company, index } = Astro.props;
const { image, name, website, city, courses } = company
const imageUrl = IMAGES.training[image] || '';
---
<div class="col">
    <astro-heart>
        <div id={name} data-set-company={company} class={`card cardTraining`}>
            <div class={"companyImg"}>
                <Image src={imageUrl} height={454} width={215} alt={name}/>
            </div>
            <div class="accordion accordion-flush border-top" id={`accordionFlush-${index}`}>
                <div class="accordion-item ">
                        <span class="accordion-header" id={`flush-heading-${index}`}>
                            <button class="accordion-button collapsed px-4 py-2 border-bottom-5" type="button"
                                    data-bs-toggle="collapse"
                                    data-bs-target={`#flush-collapse-${index}`}
                                    aria-expanded="false"
                                    aria-controls={`flush-collapse-${index}`}>
                                <div>
                                    <span>
                                        <a rel="noreferrer"
                                           href={website}
                                           target="_blank"
                                           class="link-success">
                                        <h5 class="card-title">{name}</h5>
                                        </a>
                                    </span>
                                    <span>{city}</span>
                                    </div>
                            </button>
                        </span>
                    <div id={`flush-collapse-${index}`}
                         class="accordion-collapse collapse"
                         aria-labelledby={`flush-heading-${index}`}
                         data-bs-parent={`#accordionFlush-${index}`}>
                        <div class="accordion-body">
                            <ul class="list-group list-group-flush">
                                {courses.map((course, _index) => {
                                    return (
                                            <li class="list-group-item">
                                                <div class={'row'}>
                                                    <div class={'col-10'}>
                                                        {course.title}
                                                    </div>
                                                    <div class={'col-1'}
                                                         style={{ cursor: 'pointer' }}
                                                         data-bs-toggle={'tooltip' + _index}
                                                         data-bs-placement="top"
                                                         title={`${course.from} - ${course.to}`}>
                                                        <Icon name="mdi:calendar"/>
                                                    </div>
                                                    <div class={'col-1'}
                                                         hidden={!course.urlCertificate}>
                                                        <a class={'link-success'}
                                                           rel="noreferrer"
                                                           href={course.urlCertificate}
                                                           target="_blank">
                                                            <Icon name="mdi:certificate"/>
                                                        </a>
                                                    </div>
                                                </div>
                                            </li>)
                                })}
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </astro-heart>
</div>

<style>
    .cardTraining {
        box-shadow: 5px 5px 5px #eee;
    }

    .cardTraining img {
        width: 100%;
        object-position: 0 center;
        object-fit: contain;
    }


    .accordion-button:focus {
        box-shadow: 0 0 0 0 transparent !important;
    }

    .accordion-button:not(.collapsed) {
        color: rgba(30, 150, 50, 1);
        background-color: transparent;
    }

    .activeCard {
        border-color: rgba(30, 150, 50, 0.2) !important;
        box-shadow: 0 0 0 0.25rem rgba(30, 150, 50, 0.2) !important;
    }

    .companyImg {
        height: 215px;
        display: flex;
        align-items: center;
        overflow: hidden;
    }
</style>

<script>
    // Define el comportamiento para nuestro nuevo tipo de elemento HTML.
    class AstroHeart extends HTMLElement {
        constructor() {
            super();

            const { company } = this.dataset;
            const button = this.querySelector('button');
            const div = this.querySelector(`#${company}`)
            button?.addEventListener('click', () => {
                div?.classList.add("activeCard")
            });
        }
    }

    // Dile al navegador que use nuestra clase AstroHeart para elementos <astro-heart>.
    customElements.define('astro-heart', AstroHeart);
</script>